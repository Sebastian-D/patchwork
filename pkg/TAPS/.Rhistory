dupcor<-duplicateCorrelation(Data, design, block=block)
dupcor$consensus.correlation
cont.matrix<- makeContrasts(C_ATRAvsA=C_ATRA-C, IKK1_ATRAvsIKK1=IKK1_ATRA-IKK1, IKK2_ATRAvsIKK2=IKK2_ATRA-IKK2, levels=design)
fit<-lmFit(Data,design, block=block, correlation=dupcor$consensus.correlation)
fit2<-contrasts.fit(fit, cont.matrix)
fit2<-eBayes(fit2)
summary(decideTests(fit2))
vennDiagram(fit2)
results=decideTests(fit2)
vennDiagram(results)
cont.matrix<- makeContrasts(C_ATRAvsC=C_ATRA-C, IKK1_ATRAvsIKK1=IKK1_ATRA-IKK1, IKK2_ATRAvsIKK2=IKK2_ATRA-IKK2, levels=design)
fit<-lmFit(Data,design, block=block, correlation=dupcor$consensus.correlation)
fit2<-contrasts.fit(fit, cont.matrix)
fit2<-eBayes(fit2)
summary(decideTests(fit2))
list1<-topTable(fit2, coef=1, number="all")
list2<-topTable(fit2, coef=2, number="all")
list3<-topTable(fit2, coef=3, number="all")
write.table(list1, file="C_ATRAvsC.txt", sep="\t")
write.table(list2, file="IKK1_ATRAvsIKK1.txt", sep="\t")
write.table(list3, file="IKK2_ATRAvsIKK2.txt", sep="\t")
vennDiagram(results)
results=decideTests(fit2)
vennDiagram(results)
savehistory("E:/PROJEKT/PA126/hist120605.Rhistory")
save.image("E:/PROJEKT/PA126/Analysis120605.RData")
ls()
design2=cbind(Control=c(1,1,1,1,0,0,0,0,0,0,0,0), IKK=c(0,0,0,0,1,1,1,1,1,1,1,1), ATRA=c(0,1,0,1,0,1,0,1,0,1,0,1))
design2=cbind(Control=c(1,1,1,1,0,0,0,0,0,0,0,0), IKK=c(0,0,0,0,1,1,1,1,1,1,1,1))
design3=cbind(Untreated=c(1,0,1,0,1,0,1,0,1,0,1,0), ATRA=c(0,1,0,1,0,1,0,1,0,1,0,1))
design2
design3
designFinal=model.matrix(~design2+design3)
designFinal
colnames(design) <- c("Fem.Case","Male.Case",
"UnTreated","ATRA")
colnames(designFinal)=c("Control", "IKK", "Untreated", "ATRA")
colnames(designFinal)=c("Control", "IKK", "Untreated", "ATRA")
designFinal=model.matrix(~0+design2:design3)
designFinal
colnames(designFinal)=c("Control", "IKK", "Untreated", "ATRA")
designFinal
colnames(designFinal)=c("Control.Untreated", "IKK.Untreated", "Control.ATRA", "IKK.ATRA")
designFinal
contrastI=makeContrasts((IKK.ATRA-Control.ATRA)-(IKK.Untreated-Control.Untreated), levels=designFinal)
library(limma)
contrastI=makeContrasts((IKK.ATRA-Control.ATRA)-(IKK.Untreated-Control.Untreated), levels=designFinal)
contrastI
source('Y:/tillHanna/COLON/Gruppanalys_Colon_apr.r')
setwd("E:/PROJEKT/PA126")
Data<-read.table("RMAnorm_wA_main_data.txt", sep="\t")
block=c(1,1,2,2,1,1,2,2,1,1,2,2,1,1,2,2)
block
block=c(1,1,2,2,1,1,2,2,1,1,2,2)
design=cbind(C=c(1,0,1,0,0,0,0,0,0,0,0,0), C_ATRA=c(0,1,0,1,0,0,0,0,0,0,0,0), IKK1=c(0,0,0,0,1,0,1,0,0,0,0,0), IKK1_ATRA=c(0,0,0,0,0,1,0,1,0,0,0,0), IKK2=c(0,0,0,0,0,0,0,0,1,0,1,0), IKK2_ATRA=c(0,0,0,0,0,0,0,0,0,1,0,1))
deisgn
design
dupcor<-duplicateCorrelation(Data, design, block=block)
library(limma)
dupcor<-duplicateCorrelation(Data, design, block=block)
dupcor$consensus.correlation
cont.matrix<- makeContrasts(C_ATRAvsA=C_ATRA-C, IKK1_ATRAvsIKK1=IKK1_ATRA-IKK1, IKK2_ATRAvsIKK2=IKK2_ATRA-IKK2, levels=design)
fit<-lmFit(Data,design, block=block, correlation=dupcor$consensus.correlation)
fit2<-contrasts.fit(fit, cont.matrix)
fit2<-eBayes(fit2)
summary(decideTests(fit2))
vennDiagram(fit2)
results=decideTests(fit2)
vennDiagram(results)
cont.matrix<- makeContrasts(C_ATRAvsC=C_ATRA-C, IKK1_ATRAvsIKK1=IKK1_ATRA-IKK1, IKK2_ATRAvsIKK2=IKK2_ATRA-IKK2, levels=design)
fit<-lmFit(Data,design, block=block, correlation=dupcor$consensus.correlation)
fit2<-contrasts.fit(fit, cont.matrix)
fit2<-eBayes(fit2)
summary(decideTests(fit2))
list1<-topTable(fit2, coef=1, number="all")
list2<-topTable(fit2, coef=2, number="all")
list3<-topTable(fit2, coef=3, number="all")
write.table(list1, file="C_ATRAvsC.txt", sep="\t")
write.table(list2, file="IKK1_ATRAvsIKK1.txt", sep="\t")
write.table(list3, file="IKK2_ATRAvsIKK2.txt", sep="\t")
vennDiagram(results)
results=decideTests(fit2)
vennDiagram(results)
savehistory("E:/PROJEKT/PA126/hist120605.Rhistory")
dupcorF<-duplicateCorrelation(Data, designFinal, block=block)
dupcorF$consensus.correlation
fitF<-lmFit(Data,designFinal, block=block, correlation=dupcorF$consensus.correlation)
fitF2<-contrasts.fit(fitF, contrastI)
fitF2<-eBayes(fitF2)
summary(decideTests(fitF2))
topTable(fitF2)
listF=topTable(fitF2, coef=1, number='all')
write.table(listF, file="Interaction.txt", sep="\t")
save.image("E:\\PROJEKT\\PA126\\Analysis120827.RData")
contrastI
setwd("E:/PROJEKT/PA071_AS_HGK/Analysis2012")
Data=read.table("Results_RMAnorm_50prov_uAFFX_120830_data.txt", sep="\t")
design=cbind(NK=c(1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), NT=c(0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), MDK=c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0), MDT=c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1))
design=cbind(NK=c(1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), NT=c(0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), MDK=c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0), MDT=c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1))
design
library(limma)
cont.matrix<- makeContrasts(MDKvNK_VS_MDTvNT=(MDK-NK)-(MDT-NT)), levels=design)
cont.matrix<- makeContrasts(MDKvNK_VS_MDTvNT=(MDK-NK)-(MDT-NT), levels=design)
cont.matrix
fit<-lmFit(Data,design)
fit2<-contrasts.fit(fit, cont.matrix)
fit2<-eBayes(fit2)
summary(decideTests(fit2))
topTable(fit2)
fitR<-lmFit(Data,design, method="robust")
fitR2<-contrasts.fit(fitR, cont.matrix)
fitR2<-eBayes(fitR2)
summary(decideTests(fitR2))
topTable(fitR2)
list=topTable(fitR2, coef=1, number='all')
write.table(list, file="MDKvNK_VS_MDTvNT", sep"\t")
write.table(list, file="MDKvNK_VS_MDTvNT", sep="\t")
write.table(list, file="MDKvNK_VS_MDTvNT.txt", sep="\t")
DataA5=read.table("Results_RMAnorm_50prov_A5_uAFFX_120830_data.txt", sep="\t")
fitR_A5<-lmFit(DataA5,design, method="robust")
fitR_A5_2<-contrasts.fit(fitR_A5, cont.matrix)
fitR_A5_2<-eBayes(fitR_A5_2)
summary(decideTests(fitR_A5_2))
topTable(fitR_A5_2)
topTable(fitR_A5_2, number=30)
listA5=topTable(fitR_A5_2, coef=1, number='all')
write.table(listA5, file="MDKvNK_VS_MDTvNT_A5.txt", sep="\t")
savehistory("E:/PROJEKT/PA071_AS_HGK/Analysis2012/hist120830.Rhistory")
load("C:/Users/hagor/Desktop/Analysis120918.RData")
#quartz(file='genome_dups.png',width=14,height=14,dpi=300,type='png')
png(file='genome_dups_Recurrence.png', width=1000,height=1000)
layout(matrix(1:1,nrow=1,byrow=T), widths=1,heights=1)
## Recurrence
plot_genome_dup('Recurrence',sampleData,sampleData$Recidiv=='recidiv' | sampleData$Stadium==4 )
## Chromothripsis
#plot_genome_dup('Chromothripsis',sampleData,sampleData$Fragmented!='')
## BRAF 600
#plot_genome_dup('BRAF 600',sampleData,sampleData$BRAF_600!='wt')
## KRAS 12 13
#plot_genome_dup('KRAS 12/13',sampleData,sampleData$KRAS_12_13!='wt')
## KRAS 61
#plot_genome_dup('KRAS 61',sampleData,sampleData$KRAS_61!='wt')
## MSI-L
#plot_genome_dup('MSI-L',sampleData,sampleData$MSI=='MSI-L')
## MSI-H
#plot_genome_dup('MSI-H',sampleData,sampleData$MSI=='MSI-H')
## PI3K Exon 9
#plot_genome_dup('PI3K-ex9',sampleData,sampleData$PI3K_ex9!='' & sampleData$PI3K_ex9!='wt')
## PI3K Exon 20
#plot_genome_dup('PI3K-ex20',sampleData,sampleData$PI3K_ex20!='' & sampleData$PI3K_ex20!='wt')
dev.off()
mss=sampleData$MSI!='MSI-H'
dim(mss)
mss
sampleData[mss]
mss[sampleData]
png(file='genome_dups_Recurrence.png', width=1000,height=1000)
layout(matrix(1:1,nrow=1,byrow=T), widths=1,heights=1)
## Recurrence
plot_genome_dup('Recurrence',sampleData$MSI!='MSI-H',sampleData$Recidiv=='recidiv' | sampleData$Stadium==4 )
## Chromothripsis
#plot_genome_dup('Chromothripsis',sampleData,sampleData$Fragmented!='')
## BRAF 600
#plot_genome_dup('BRAF 600',sampleData,sampleData$BRAF_600!='wt')
## KRAS 12 13
#plot_genome_dup('KRAS 12/13',sampleData,sampleData$KRAS_12_13!='wt')
## KRAS 61
#plot_genome_dup('KRAS 61',sampleData,sampleData$KRAS_61!='wt')
## MSI-L
#plot_genome_dup('MSI-L',sampleData,sampleData$MSI=='MSI-L')
## MSI-H
#plot_genome_dup('MSI-H',sampleData,sampleData$MSI=='MSI-H')
## PI3K Exon 9
#plot_genome_dup('PI3K-ex9',sampleData,sampleData$PI3K_ex9!='' & sampleData$PI3K_ex9!='wt')
## PI3K Exon 20
#plot_genome_dup('PI3K-ex20',sampleData,sampleData$PI3K_ex20!='' & sampleData$PI3K_ex20!='wt')
dev.off()
library(xps)
setRepositories()
install.packages("xps")
library(xps)
load("C:/Users/hagor/Dropbox/Colon_snp6/RESULTAT/Analysis121002.RData")
ls()
Model=glm(poor~loss1p, family=binomial)
m <- summary(Model)
m
help(glm)
save.image("C:/Users/hagor/Dropbox/Colon_snp6/RESULTAT/Analysis121002.RData")
load("E:/PROJEKT/PA106_AS_HGK/AgeStudyOkt2012/Analysis121030.RData")
block
design
dupcor$consensus.correlation
fitB<-lmFit(Data,design, block=block, correlation=dupcor$consensus.correlation)
help(topTable)
load("C:/Users/hagor/Dropbox/Colon_snp6/Analysis121119.RData")
setwd("C:/Users/hagor/Dropbox/Colon_snp6")
source('TAPS_may2012.r')
sampleData <- load.txt('allSamples.txt')
load('ideogram.Rdata')
chroms=ideogram
#load('chroms.Rdata') #### Varning! En annan chroms har nog anvÃ¤nts till frekvensplottarna...
chroms$before <- temp <- 0
chroms$Chromosome=chroms$chr
for (i in 1:24) {
chroms$before[chroms$chr==chrom_ucsc(i)] = temp
temp=temp+ideogram$length[chroms$chr==chrom_ucsc(i)]
}
#load('ideogram.Rdata')
nSamples=nrow(sampleData)
#for (i in 1:ncol(sampleData)) sampleData[,i][sampleData[,i]==''] <- NA
## Load and parse all samples
samples <- chromwise <- meanCns <- meanImba <- maxfrag <- meanFrag <- maxfragchr <- fragmat <- LCn4mCn2 <- LCn6mCn2 <- LCn6mCn2 <-LTotal <- NULL
for (i in 1:nSamples) {
table <- load.txt(paste('allCNs/',sampleData$Sample[i],'_segmentCN.txt',sep=''))
table$n <- i
table$name <- as.character(sampleData$Sample[i])
table$stage=sampleData$Stadium[i]
table$rec=sampleData$Recidiv[i]
table$kras1213=sampleData$KRAS_12_13[i]
table$kras61=sampleData$KRAS_61[i]
table$braf=sampleData$BRAF_600[i]
table$msi=sampleData$MSI[i]
table$nodes=sampleData$Antal[i]
table$pi3k9=sampleData$PI3K_ex9[i]
table$pi3k20=sampleData$PI3K_ex20[i]
## Calculate degree of Cn 4/6 mCn 2 for each sample
LCn6mCn2[i]=sum(table$lengthMB[table$Cn==6 & table$mCn==2 & !is.na(table$mCn)])
LCn4mCn2[i]=sum(table$lengthMB[table$Cn==4 & table$mCn==2 & !is.na(table$mCn)])
LCn46mCn2[i]=LCn4mCn2[i]+LCn6mCn2[i]
LTotal[i]=sum(table$lengthMB)
## Calculate chrom-arm-wise Cn-changes.
changes=ideogram; changes$p=0; changes$q=0; changes$maxfrag=0; changes$pmed=NA; changes$qmed=NA; changes$plocal=NA; changes$qlocal=NA;
for (c in as.character(changes$chr)) {
ix=changes$chr==c
# p arm: breakpoints
temp=table[table$Chromosome==c & table$End<ideogram$mid[ideogram$chr==c],]
temp=temp[!is.na(temp$imba) & temp$snps>100,]
if (nrow(temp)>1) {
changes$p[ix]=sum(abs(temp$imba[1:(nrow(temp)-1)] - temp$imba[2:(nrow(temp))])>0.15)
} else changes$p[ix]=c(0)
# median copy number
if (nrow(temp)>0) changes$pmed[ix]=weightedMedian(temp$Cn,temp$probes)
# Localized chromothripsis (20MB window)
maxp <- max <- end <- 0; while (end<ideogram$start[ix]) {
t=temp[temp$End<end & temp$Start<end-20e6,]
if (nrow(t)>1) {
breaks=sum(abs(t$imba[1:(nrow(t)-1)] - t$imba[2:(nrow(t))])>0.15)
} else breaks=0
if (breaks>max) {
max=breaks; maxp=end-10e6
}
end=end+1e6
}; changes$plocal[ix]=max
# q arm: breakpoints
temp=table[table$Chromosome==c & table$Start>ideogram$mid[ideogram$chr==c],]
temp=temp[!is.na(temp$imba) & temp$snps>100,]
if (nrow(temp)>1) {
changes$q[ix]=sum(abs(temp$imba[1:(nrow(temp)-1)] - temp$imba[2:(nrow(temp))])>0.05)
} else changes$q[ix]=c(0)
# median copy number
if (nrow(temp)>0) changes$qmed[ix]=weightedMedian(temp$Cn,temp$probes)
# Localized chromothripsis (20MB window)
maxp <- max <-0; end <- ideogram$end[ix]; while (end<ideogram$length[ix]) {
t=temp[temp$End<end & temp$Start<end-20e6,]
if (nrow(t)>1) {
breaks=sum(abs(t$imba[1:(nrow(t)-1)] - t$imba[2:(nrow(t))])>0.05)
} else breaks=0
if (breaks>max) {
max=breaks; maxp=end-10e6
}
end=end+1e6
}; changes$qlocal[ix]=max
}
changes$p=changes$p/ (changes$start) * 100e6
changes$q=changes$q/ (changes$length-changes$end) * 100e6
changes$maxfrag=apply(changes[,6:7],1,max)
ix <- as.numeric(deChrom_ucsc(table$Chromosome)) <= 22
table$meanCn <- meanCns[i] <- round(weightedMean(table$Cn[ix], table$lengthMB[ix]),2)
table$meanImba <- meanImba[i] <- sum(table$lengthMB[table$Cn != table$mCn*2],na.rm=T) / 3000#1 - weightedMean(table$mCn[ix] / (table$Cn[ix]-table$mCn[ix]), table$length[ix])
maxfrag[i] <- max(changes$maxfrag)
maxfragchr[i] <- as.character(changes$chr[changes$maxfrag==maxfrag[i]][1])
meanFrag[i] <- mean(mean(changes$p,na.rm=T),mean(changes$q,na.rm=T))
samples <- rbind(samples,table)
chromwise[[i]] = changes
}
sampleData$meanCn=meanCns
sampleData$meanImba=meanImba
sampleData$maxFrag=maxfrag
sampleData$maxFragChr=maxfragchr
sampleData$meanFrag=meanFrag
## Load and parse all samples
samples <- chromwise <- meanCns <- meanImba <- maxfrag <- meanFrag <- maxfragchr <- fragmat <- LCn4mCn2 <- LCn6mCn2 <- LCn46mCn2 <-LTotal <- NULL
for (i in 1:nSamples) {
table <- load.txt(paste('allCNs/',sampleData$Sample[i],'_segmentCN.txt',sep=''))
table$n <- i
table$name <- as.character(sampleData$Sample[i])
table$stage=sampleData$Stadium[i]
table$rec=sampleData$Recidiv[i]
table$kras1213=sampleData$KRAS_12_13[i]
table$kras61=sampleData$KRAS_61[i]
table$braf=sampleData$BRAF_600[i]
table$msi=sampleData$MSI[i]
table$nodes=sampleData$Antal[i]
table$pi3k9=sampleData$PI3K_ex9[i]
table$pi3k20=sampleData$PI3K_ex20[i]
## Calculate degree of Cn 4/6 mCn 2 for each sample
LCn6mCn2[i]=sum(table$lengthMB[table$Cn==6 & table$mCn==2 & !is.na(table$mCn)])
LCn4mCn2[i]=sum(table$lengthMB[table$Cn==4 & table$mCn==2 & !is.na(table$mCn)])
LCn46mCn2[i]=LCn4mCn2[i]+LCn6mCn2[i]
LTotal[i]=sum(table$lengthMB)
## Calculate chrom-arm-wise Cn-changes.
changes=ideogram; changes$p=0; changes$q=0; changes$maxfrag=0; changes$pmed=NA; changes$qmed=NA; changes$plocal=NA; changes$qlocal=NA;
for (c in as.character(changes$chr)) {
ix=changes$chr==c
# p arm: breakpoints
temp=table[table$Chromosome==c & table$End<ideogram$mid[ideogram$chr==c],]
temp=temp[!is.na(temp$imba) & temp$snps>100,]
if (nrow(temp)>1) {
changes$p[ix]=sum(abs(temp$imba[1:(nrow(temp)-1)] - temp$imba[2:(nrow(temp))])>0.15)
} else changes$p[ix]=c(0)
# median copy number
if (nrow(temp)>0) changes$pmed[ix]=weightedMedian(temp$Cn,temp$probes)
# Localized chromothripsis (20MB window)
maxp <- max <- end <- 0; while (end<ideogram$start[ix]) {
t=temp[temp$End<end & temp$Start<end-20e6,]
if (nrow(t)>1) {
breaks=sum(abs(t$imba[1:(nrow(t)-1)] - t$imba[2:(nrow(t))])>0.15)
} else breaks=0
if (breaks>max) {
max=breaks; maxp=end-10e6
}
end=end+1e6
}; changes$plocal[ix]=max
# q arm: breakpoints
temp=table[table$Chromosome==c & table$Start>ideogram$mid[ideogram$chr==c],]
temp=temp[!is.na(temp$imba) & temp$snps>100,]
if (nrow(temp)>1) {
changes$q[ix]=sum(abs(temp$imba[1:(nrow(temp)-1)] - temp$imba[2:(nrow(temp))])>0.05)
} else changes$q[ix]=c(0)
# median copy number
if (nrow(temp)>0) changes$qmed[ix]=weightedMedian(temp$Cn,temp$probes)
# Localized chromothripsis (20MB window)
maxp <- max <-0; end <- ideogram$end[ix]; while (end<ideogram$length[ix]) {
t=temp[temp$End<end & temp$Start<end-20e6,]
if (nrow(t)>1) {
breaks=sum(abs(t$imba[1:(nrow(t)-1)] - t$imba[2:(nrow(t))])>0.05)
} else breaks=0
if (breaks>max) {
max=breaks; maxp=end-10e6
}
end=end+1e6
}; changes$qlocal[ix]=max
}
changes$p=changes$p/ (changes$start) * 100e6
changes$q=changes$q/ (changes$length-changes$end) * 100e6
changes$maxfrag=apply(changes[,6:7],1,max)
ix <- as.numeric(deChrom_ucsc(table$Chromosome)) <= 22
table$meanCn <- meanCns[i] <- round(weightedMean(table$Cn[ix], table$lengthMB[ix]),2)
table$meanImba <- meanImba[i] <- sum(table$lengthMB[table$Cn != table$mCn*2],na.rm=T) / 3000#1 - weightedMean(table$mCn[ix] / (table$Cn[ix]-table$mCn[ix]), table$length[ix])
maxfrag[i] <- max(changes$maxfrag)
maxfragchr[i] <- as.character(changes$chr[changes$maxfrag==maxfrag[i]][1])
meanFrag[i] <- mean(mean(changes$p,na.rm=T),mean(changes$q,na.rm=T))
samples <- rbind(samples,table)
chromwise[[i]] = changes
}
sampleData$meanCn=meanCns
sampleData$meanImba=meanImba
sampleData$maxFrag=maxfrag
sampleData$maxFragChr=maxfragchr
sampleData$meanFrag=meanFrag
LCn46mCn2
Ratio=LCn46mCn2/LTotal
Ratio=LCn46mCn2/LTotal
SelectedRatio=Ratio[samples$msi!='MSI-H',]
Ratio=LCn46mCn2/LTotal
SelectedRatio=Ratio[samples$msi!='MSI-H']
dim(SelectedRatio)
SelectedRatio
Ratio=LCn46mCn2/LTotal
SelectedRatio=Ratio[Ratio(samples$msi!='MSI-H')]
ratio=LCn46mCn2/LTotal
selected<- samples[samples$msi!='MSI-H',]
selected
View(sampleData)
View(sampleData)
View(sampleData)
View(sampleData)
sampleData$MSI!='MSI-H'
ratio[sampleData$MSI!='MSI-H']
ratio=(LCn46mCn2/LTotal)*100
selected<- ratio[sampleData$MSI!='MSI-H']
hist(selected)
hist(selected,50)
MSS&MSI-L=selected
MSSandMSIL=selected
hist(MSSandMSIL,50)
dim(selected)
selected
hist(selected,50)
plot(sampleData$meanCn[sampelData$MSI!='MSI-H'], selected)
plot(sampleData$meanCn[sampleData$MSI!='MSI-H'], selected)
PercentageTemp=(LCn46mCn2/LTotal)*100
Percentage<- ratio[sampleData$MSI!='MSI-H']
hist(Percentage,50)
PercentageTemp=(LCn46mCn2/LTotal)*100
Percentage_Cn4or6_mCn2<- ratio[sampleData$MSI!='MSI-H']
hist(Percentage_Cn4or6_mCn2,50)
MeanCN_MSSandMSILsamples=sampleData$meanCn[sampleData$MSI!='MSI-H']
plot(MeanCN_MSSandMSILsample, Percentage_Cn4or6_mCn2)
MeanCN_MSSandMSILsamples=sampleData$meanCn[sampleData$MSI!='MSI-H']
plot(MeanCN_MSSandMSILsamples, Percentage_Cn4or6_mCn2)
sum(sampleData$meanCn[sampleData$MSI!='MSI-H')
sampleData$meanCn[sampleData$MSI!='MSI-H'
]
PercentageTemp=(LCn46mCn2/LTotal)*100
Percentage_Cn4or6_mCn2<- ratio[sampleData$MSI!='MSI-H']
hist(Percentage_Cn4or6_mCn2,100)
save.image("C:/Users/hagor/Dropbox/Colon_snp6/Analysis121119.RData")
savehistory("C:/Users/hagor/Desktop/hist121120.Rhistory")
view(SampleData)
samples
SampleData
sampleData
sampleData[,1]
sampleData[1,]
ratio
sampleData[1,1:3]
cbind(sampleData[,2],ratio)
sampleData[1,1:3]
cbind(sampleData[,3],ratio)
cbind(sampleData[,1:3],ratio)
RatioSampleinfo=cbind(sampleData[,1:3],ratio)
RatioSampleinfo=cbind(sampleData[,1:3],ratio,sampleData$meanCn)
RatioSampleinfo
write.table(RatioSampleInfo, file="RatiosampleInfo.txt", sep="\t")
RatioSampleInfo=cbind(sampleData[,1:3],ratio,sampleData$meanCn)
write.table(RatioSampleInfo, file="RatiosampleInfo.txt", sep="\t")
RatioSampleinfo
save.image("C:/Users/hagor/Desktop/DuplicationAnalysis.RData")
load("E:/PROJEKT/PA176/Analysis130123.RData")
ls()
library(limma)
help(vennDiagram)
result1=decideTests(fitB1R2, p=0.2)
result2=decideTests(fitB2R2, p=0.2)
result=decideTests(fit_R2, p=0.2)
result
Result=cbind(result1, result2, result)
vennDiagram(Result)
summary(result1)
summary(result2)
summary(result)
A=[1,2,3,4,5]
A=c(1,2,3,4,5)
A
hiat(A)
hist(A)
help(hist)
B=A>3
B
load("E:/PROJEKT/PA176/Analysis130123.RData")
ls()
result1=decideTests(fitB1R2, p=0.2)
result2=decideTests(fitB2R2, p=0.2)
result=decideTests(fit_R2, p=0.2)
Result=cbind(result1, result2, result)
ResultNew=cbind(Result[,1:3])
dim(Result)
dim(ResultNew)
ResultNew=Result[,1:3]
dim(ResultNew)
ResultNew=Result[,1:2]
dim(ResultNew)
ResultNew=Result[,1:2]
dim(Result)
ResultNew=Result[,1:2]
dim(ResultNew)
vennDiagram(ResultNew)
load("E:/PROJEKT/PA183/AnalysBatch1and2/Analysis130311.RData")
ls()
results=decideTests(fitNew2)
summary(results)
topTable(ditNew2)
topTable(fitNew2)
topTable(fitNew2, coef=1)
topTable(fitNew2, coef=2)
topTable(fitNew2, coef=2, number=20)
topTable(fitNew2, coef=2, number=30)
setRepositories()
install.packages("TAPS")
install.packages('TAPS')
library(TAPS)
setRepositories()
install.packages('TAPS')
setwd("C:/Users/hagor/Dropbox/TAPSdev")
setRepositories()
install.packages('TAPS')
setwd("C:/Users/hagor/Dropbox/TAPSdev")
setwd("C:/Users/hagor/Dropbox/TAPSdev/TAPS")
install.packages('TAPS')
install.packages("C:/Users/hagor/Dropbox/TAPSdev/TAPS")
install.packages("C:/Users/hagor/Dropbox/TAPSdev")
install.packages("C:/Users/hagor/Dropbox/TAPSdev/TAPS.zip", repos = NULL)
library(TAPS)
setRepositories()
install.packages("C:/Users/hagor/Dropbox/TAPSdev/TAPS.zip", repos = NULL)
library(TAPS)
library('TAPS)
''
)
)')'
library('TAPS')
